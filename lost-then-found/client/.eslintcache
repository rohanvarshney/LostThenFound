[{"C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\index.js":"1","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\App.js":"2","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\reportWebVitals.js":"3","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Found.js":"4","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Lost.js":"5","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Matches.js":"6","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Nav.js":"7","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Home.js":"8","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Popup.js":"9","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Post.js":"10","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Filter.js":"11","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Details.js":"12","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\TagsInput.js":"13","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\auth\\Register.js":"14","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\auth\\Login.js":"15"},{"size":517,"mtime":1614194058633,"results":"16","hashOfConfig":"17"},{"size":7797,"mtime":1615943305414,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1614194058634,"results":"19","hashOfConfig":"17"},{"size":5796,"mtime":1615856041476,"results":"20","hashOfConfig":"17"},{"size":5783,"mtime":1615856041476,"results":"21","hashOfConfig":"17"},{"size":163,"mtime":1614194058621,"results":"22","hashOfConfig":"17"},{"size":1088,"mtime":1615943071701,"results":"23","hashOfConfig":"17"},{"size":1865,"mtime":1615856041476,"results":"24","hashOfConfig":"17"},{"size":3744,"mtime":1615856041476,"results":"25","hashOfConfig":"17"},{"size":1500,"mtime":1615856041484,"results":"26","hashOfConfig":"17"},{"size":1482,"mtime":1615856041474,"results":"27","hashOfConfig":"17"},{"size":1836,"mtime":1615856041474,"results":"28","hashOfConfig":"17"},{"size":1749,"mtime":1615856041484,"results":"29","hashOfConfig":"17"},{"size":3349,"mtime":1615943542941,"results":"30","hashOfConfig":"17"},{"size":2514,"mtime":1615943572323,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ikh9hv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\index.js",[],["70","71"],"C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\App.js",["72","73","74","75"],"C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\reportWebVitals.js",[],"C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Found.js",["76","77","78","79","80"],"import React, { useState, useEffect } from 'react';\r\nimport Post from \"./Post\";\r\nimport Popup from \"./Popup\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst Found = (props) => {\r\n\r\n  const originalPosts = props.itemData[1].items.map((item, idx) => (\r\n      <Post\r\n          imgSrc={item.imgSrc}\r\n          title={item.title}\r\n          date={item.date}\r\n          time={item.time}\r\n          location={item.location}\r\n          description={item.description}\r\n      />\r\n  ));\r\n\r\n  var [posts, updatePosts] = useState(props.itemData[1].items.map((item, idx) => (\r\n    <Post\r\n          imgSrc={item.imgSrc}\r\n          title={item.title}\r\n          date={item.date}\r\n          time={item.time}\r\n          location={item.location}\r\n          description={item.description}\r\n      />\r\n  )));\r\n\r\n    // state management for New Post popup box\r\n    const [visible, setVisible] = useState(false); // default set to hidden\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filterOpen, setFilterOpen] = useState(false);\r\n\r\n    var [filterDate] = useState(\"\");\r\n    var [filterTime] = useState(\"\");\r\n    var [tagsList] = useState([]);\r\n    var [a, b, c] = [false, false, false]\r\n\r\n    const setFilterDate = (fd) => {\r\n      filterDate = fd;\r\n      a = true;\r\n      if (a && b && c) {\r\n        handleFilterAction();\r\n        a = false;\r\n        b = false;\r\n        c = false;\r\n      }\r\n    }\r\n    const setFilterTime = (ft) => {\r\n      filterTime = ft;\r\n      b = true;\r\n      if (a && b && c) {\r\n        handleFilterAction();\r\n        a = false;\r\n        b = false;\r\n        c = false;\r\n      }\r\n    }\r\n\r\n    const setTagsList = (tl) => {\r\n      tagsList = tl;\r\n      c = true;\r\n      if (a && b && c) {\r\n        handleFilterAction();\r\n        a = false;\r\n        b = false;\r\n        c = false;\r\n      }\r\n\r\n    }\r\n\r\n    // handler for toggling filter popup\r\n    const toggleFilter = (d) => {\r\n      setFilterOpen(!filterOpen);\r\n    }\r\n\r\n    // handler for toggling state of new post button\r\n    const togglePopup = (d) => {\r\n      setVisible(!visible);\r\n    };\r\n\r\n    function isSearchedFor(item, searchText) {\r\n      var searched = false;\r\n      if (item.title.toLowerCase().includes(searchText.toLowerCase())) {\r\n        searched = true;\r\n      }\r\n\r\n      return searched;\r\n    }\r\n\r\n    function convertDateFormat(originalDate) {\r\n      console.log(\"Changing: \" + originalDate);\r\n      // from yyyy-mm-dd to mm/dd/yyyy\r\n      var parts = originalDate.split(\"-\");\r\n      var newDate = parts[1] + \"/\" + parts[2] + \"/\" + parts[0];\r\n      return newDate;\r\n    }\r\n\r\n    function isFilteredFor(item, filterDate, filterTime, tagsList) {\r\n      var searched = false;\r\n      console.log(convertDateFormat(filterDate));\r\n      console.log(item.date);\r\n      if (convertDateFormat(filterDate) == item.date) {\r\n        searched = true;\r\n      }\r\n      return searched;\r\n\r\n    }\r\n\r\n    function handleFilterAction() {\r\n      console.log('The filter action was called.');\r\n      console.log(\"Filter Params: \" + filterDate + \", \" + filterTime + \", \" + tagsList);\r\n      const allItems = originalPosts;\r\n\r\n      if (filterDate === \"\" && filterTime === \"\" && (tagsList == null || tagsList.length == 0)) {\r\n          updatePosts(originalPosts);\r\n      } else {\r\n\r\n          var filteredItems = allItems.filter(function (item) {\r\n            var validItem = isFilteredFor(item.props, filterDate, filterTime, tagsList);\r\n            if (validItem == true) {\r\n              console.log(\"Match\");\r\n              console.log(item.props);\r\n              return true;\r\n            } else {\r\n              console.log(\"Not a match\");\r\n              return false;\r\n            }\r\n\r\n          });\r\n\r\n          updatePosts(filteredItems);\r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n    function handleSearchButtonClick(e) {\r\n        setSearchText(e.target.value);\r\n        e.preventDefault();\r\n        console.log('The search button was clicked.');\r\n        console.log(\"Search Bar Text:\" + searchText);\r\n\r\n        // Do onChange event for other fields as needed\r\n        const allItems = originalPosts;\r\n\r\n        if (e.target.value === \"\" | searchText === \"\") {\r\n          updatePosts(originalPosts);\r\n        } else {\r\n          var searchedItems = allItems.filter(function (item) {\r\n            var validItem = isSearchedFor(item.props, searchText);\r\n            if (validItem == true) {\r\n              console.log(\"Match\");\r\n              console.log(item.props);\r\n              return true;\r\n            } else {\r\n              console.log(\"Not a match\");\r\n              return false;\r\n            }\r\n          });\r\n          updatePosts(searchedItems);\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n      <div class=\"container\">\r\n        <div id=\"searchPost\">\r\n          <input onChange={event => handleSearchButtonClick(event)} type=\"text\" placeholder=\"Search by keyword...\" class=\"searchBar\"></input>\r\n          {/*<button type=\"button\" id=\"search\" onClick={handleSearchButtonClick}>Search</button>*/}\r\n          <div className=\"filter-container\">\r\n            <button type=\"button\" id=\"filter\" onClick={toggleFilter}>Filter</button>\r\n            {filterOpen && <Filter passFilterDate={setFilterDate} passFilterTime={setFilterTime} passTagsList={setTagsList} />}\r\n          </div>\r\n          <button type=\"button\" id=\"newPost\" onClick={togglePopup}>New Post</button>\r\n          </div>\r\n        <div class=\"flex-container\">\r\n\r\n\r\n          {posts}\r\n\r\n          {visible && <Popup\r\n            itemState={'New Found Item'}\r\n            location={'Location Found'}\r\n            timeLabel={'Approximate time found'}\r\n            dateLabel={'Date found'}\r\n            locationLabel={'Location found'}\r\n            handleClose={togglePopup}\r\n          />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Found;\r\n","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Lost.js",["81","82","83","84","85"],"import React, { useState, useEffect } from 'react';\r\nimport Post from \"./Post\";\r\nimport Popup from \"./Popup\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst Lost = (props) => {\r\n\r\n  const originalPosts = props.itemData[0].items.map((item, idx) => (\r\n      <Post\r\n          imgSrc={item.imgSrc}\r\n          title={item.title}\r\n          date={item.date}\r\n          time={item.time}\r\n          location={item.location}\r\n          description={item.description}\r\n      />\r\n  ));\r\n\r\n  var [posts, updatePosts] = useState(props.itemData[0].items.map((item, idx) => (\r\n    <Post\r\n          imgSrc={item.imgSrc}\r\n          title={item.title}\r\n          date={item.date}\r\n          time={item.time}\r\n          location={item.location}\r\n          description={item.description}\r\n      />\r\n  )));\r\n\r\n    // state management for New Post popup box\r\n    const [visible, setVisible] = useState(false); // default set to hidden\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filterOpen, setFilterOpen] = useState(false);\r\n\r\n    var [filterDate] = useState(\"\");\r\n    var [filterTime] = useState(\"\");\r\n    var [tagsList] = useState([]);\r\n    var [a, b, c] = [false, false, false]\r\n\r\n    const setFilterDate = (fd) => {\r\n      filterDate = fd;\r\n      a = true;\r\n      if (a && b && c) {\r\n        handleFilterAction();\r\n        a = false;\r\n        b = false;\r\n        c = false;\r\n      }\r\n    }\r\n    const setFilterTime = (ft) => {\r\n      filterTime = ft;\r\n      b = true;\r\n      if (a && b && c) {\r\n        handleFilterAction();\r\n        a = false;\r\n        b = false;\r\n        c = false;\r\n      }\r\n    }\r\n\r\n    const setTagsList = (tl) => {\r\n      tagsList = tl;\r\n      c = true;\r\n      if (a && b && c) {\r\n        handleFilterAction();\r\n        a = false;\r\n        b = false;\r\n        c = false;\r\n      }\r\n\r\n    }\r\n\r\n    // handler for toggling filter popup\r\n    const toggleFilter = (d) => {\r\n      setFilterOpen(!filterOpen);\r\n    }\r\n\r\n    // handler for toggling state of new post button\r\n    const togglePopup = (d) => {\r\n      setVisible(!visible);\r\n    };\r\n\r\n    function isSearchedFor(item, searchText) {\r\n      var searched = false;\r\n      if (item.title.toLowerCase().includes(searchText.toLowerCase())) {\r\n        searched = true;\r\n      }\r\n\r\n      return searched;\r\n    }\r\n\r\n    function convertDateFormat(originalDate) {\r\n      console.log(\"Changing: \" + originalDate);\r\n      // from yyyy-mm-dd to mm/dd/yyyy\r\n      var parts = originalDate.split(\"-\");\r\n      var newDate = parts[1] + \"/\" + parts[2] + \"/\" + parts[0];\r\n      return newDate;\r\n    }\r\n\r\n    function isFilteredFor(item, filterDate, filterTime, tagsList) {\r\n      var searched = false;\r\n      console.log(convertDateFormat(filterDate));\r\n      console.log(item.date);\r\n      if (convertDateFormat(filterDate) == item.date) {\r\n        searched = true;\r\n      }\r\n      return searched;\r\n\r\n    }\r\n\r\n    function handleFilterAction() {\r\n      console.log('The filter action was called.');\r\n      console.log(\"Filter Params: \" + filterDate + \", \" + filterTime + \", \" + tagsList);\r\n      const allItems = originalPosts;\r\n\r\n      if (filterDate === \"\" && filterTime === \"\" && (tagsList == null || tagsList.length == 0)) {\r\n          updatePosts(originalPosts);\r\n      } else {\r\n\r\n          var filteredItems = allItems.filter(function (item) {\r\n            var validItem = isFilteredFor(item.props, filterDate, filterTime, tagsList);\r\n            if (validItem == true) {\r\n              console.log(\"Match\");\r\n              console.log(item.props);\r\n              return true;\r\n            } else {\r\n              console.log(\"Not a match\");\r\n              return false;\r\n            }\r\n\r\n          });\r\n\r\n          updatePosts(filteredItems);\r\n\r\n      }\r\n    }\r\n\r\n    function handleSearchButtonClick(e) {\r\n        setSearchText(e.target.value);\r\n        e.preventDefault();\r\n        console.log('The search button was clicked.');\r\n        console.log(\"Search Bar Text:\" + searchText);\r\n\r\n        // Do onChange event for other fields as needed\r\n        const allItems = originalPosts;\r\n\r\n        if (e.target.value === \"\" | searchText === \"\") {\r\n          updatePosts(originalPosts);\r\n        } else {\r\n          var searchedItems = allItems.filter(function (item) {\r\n            var validItem = isSearchedFor(item.props, searchText);\r\n            if (validItem == true) {\r\n              console.log(\"Match\");\r\n              console.log(item.props);\r\n              return true;\r\n            } else {\r\n              console.log(\"Not a match\");\r\n              return false;\r\n            }\r\n          });\r\n          updatePosts(searchedItems);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n      <div class=\"container\">\r\n        <div id=\"searchPost\">\r\n          <input onChange={event => handleSearchButtonClick(event)} type=\"text\" placeholder=\"Search by keyword...\" class=\"searchBar\"></input>\r\n          {/*<button type=\"button\" id=\"search\" onClick={handleSearchButtonClick}>Search</button>*/}\r\n          <div className=\"filter-container\">\r\n            <button type=\"button\" id=\"filter\" onClick={toggleFilter}>Filter</button>\r\n            {filterOpen && <Filter passFilterDate={setFilterDate} passFilterTime={setFilterTime} passTagsList={setTagsList} />}\r\n          </div>\r\n          <button type=\"button\" id=\"newPost\" onClick={togglePopup}>New Post</button>\r\n          </div>\r\n        <div class=\"flex-container\">\r\n\r\n          {posts}\r\n\r\n          {visible && <Popup\r\n            itemState={'New Lost Item'}\r\n            location={'Last Seen'}\r\n            timeLabel={'Approximate time lost'}\r\n            dateLabel={'Date lost'}\r\n            locationLabel={'Location lost'}\r\n            handleClose={togglePopup}\r\n          />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Lost;\r\n","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Matches.js",[],"C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Nav.js",[],"C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Home.js",[],"C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Popup.js",["86","87","88","89","90","91"],"import React, { useState } from \"react\";\r\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\r\n\r\nconst Popup = (props) => {\r\n\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [timeLost, setTimeLost] = useState('');\r\n    const [dateLost, setDateLost] = useState('');\r\n    const [locationLost, setLocationLost] = useState('');\r\n    const [imageSrc, setImgSrc] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [tagList, setTagList] = useState('');\r\n\r\n    //const [isLost, setLost] = useState(\"lost\")\r\n    function handlePostButtonClick(e) {\r\n        e.preventDefault();\r\n        console.log('The link was clicked.');\r\n        console.log(\"Title:\" + title);\r\n        console.log(\"Time Lost:\" + timeLost);\r\n        console.log(\"Date Lost:\" + dateLost);\r\n        console.log(\"Location Lost:\" + locationLost);\r\n        console.log(\"Img Src: \" + imageSrc);\r\n        console.log(\"Description: \" + description);\r\n        console.log(\"Tag List:\" + tagList);\r\n        // Do onChange event for other fields as needed\r\n\r\n        //TODO: Make object to pass into Express API call to post item.\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"popup-box\">\r\n            <div className=\"box\">\r\n                <span className=\"close-icon\" onClick={props.handleClose}>x</span>\r\n                <h1>{props.itemState}</h1>\r\n                <div class=\"inputHolder\">\r\n                    <input onChange={event => setTitle(event.target.value)} type=\"text\" placeholder=\"Title\" className=\"postInput\"></input> <br></br>\r\n\r\n                    <span className=\"postInputWrap\">\r\n                        <label for=\"time\" classsName=\"inputLabel\">{props.timeLabel}:</label>\r\n                        <input onChange={event => setTimeLost(event.target.value)} type=\"time\" id=\"time\" name=\"time\" className=\"postInput2\"></input>\r\n                    </span><br></br>\r\n\r\n                    <label for=\"itemDate\">{props.dateLabel}:</label>\r\n                        <input onChange={event => setDateLost(event.target.value)} type=\"date\" id=\"itemDate\" name=\"itemDate\" className=\"postInput2\"></input> <br></br>\r\n\r\n                        <label for=\"loc\">{props.locationLabel}:</label>\r\n                            <input onChange={event => setLocationLost(event.target.value)} list=\"locations\" name=\"loc\" id=\"loc\" className=\"postInput2\" id=\"locInput\"></input>\r\n                            <datalist id=\"locations\">\r\n                                <option value=\"Clough Undergraduate Learning Commons\"></option>\r\n                                <option value=\"Klaus College of Computing\"></option>\r\n                                <option value=\"Student Center\"></option>\r\n                                <option value=\"Howey Physics Building\"></option>\r\n                                <option value=\"CRC\"></option>\r\n                            </datalist> <br></br>\r\n\r\n                        <label for=\"img\">Select image:</label>\r\n                            <input onChange={event => setImgSrc(event.target.value)} type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" className=\"postInput2\" id=\"imgInput\"></input> <br></br>\r\n\r\n                            <input onChange={event => setDescription(event.target.value)} type=\"text\" placeholder=\"Item Description\" className=\"postInput\" id=\"descriptionInput\"></input> <br></br>\r\n\r\n                        <input onChange={event => setTagList(event.target.value)} type=\"text\" placeholder=\"Tags: e.g. blue, waterbottle\" className=\"postInput\"></input> <br></br>\r\n\r\n                    <button type=\"button\" id=\"addPost\" onClick={handlePostButtonClick}>Post</button>\r\n                 </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popup;\r\n","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Post.js",["92","93","94","95"],"import React, { useState } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Details from \"./Details\";\r\n\r\nconst Post = (props) => {\r\n\r\n  // state management for New Post popup box\r\n  const [visible, setVisible] = useState(false); // default set to hidden\r\n\r\n  // handler for toggling state of new post button\r\n  const togglePopup = (d) => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n    return (\r\n        <div class=\"post\" onClick={togglePopup}>\r\n          <img class=\"postImg\"\r\n            src={props.imgSrc} \r\n            alt='something'\r\n          />\r\n          <div class=\"postInfo\">\r\n            <p class=\"postTitle\"><b>{props.title}</b></p>\r\n            <span class=\"itemInfo\">\r\n              <img class=\"icon\" src=\"images/clock.png\" />\r\n              {props.time}\r\n            </span>\r\n            <br></br>\r\n           <span class=\"itemInfo\">\r\n             <img class=\"icon\" src=\"images/date.png\" />\r\n             {props.date}\r\n          </span> \r\n          <br></br>\r\n          <span class=\"itemInfo\">\r\n            <img class=\"icon\" src=\"images/location.png\" />\r\n            {props.location}\r\n          </span>\r\n          </div>\r\n\r\n          {visible && <Details\r\n            imgSrc={props.imgSrc}\r\n            title={props.title}\r\n            time={props.time}\r\n            date={props.date}\r\n            location={props.location}\r\n            description={props.description}\r\n            handleClose={togglePopup}\r\n          />}\r\n\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Post;","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Filter.js",["96"],"import React, { useState, useEffect } from \"react\";\r\nimport TagsInput from \"./TagsInput\";\r\n\r\nconst Filter = (props) => {\r\n\r\n  const [filterDate, setFilterDate] = useState();\r\n  const [filterTime, setFilterTime] = useState();\r\n  const [tagsList, setTagsList] = useState([]);\r\n\r\n\r\n  function handleFilterButtonClick(e) {\r\n      e.preventDefault();\r\n      console.log('The filter button was clicked.');\r\n      console.log(\"Filter Values: \");\r\n      console.log(filterDate);\r\n      console.log(filterTime);\r\n      console.log(\"List:\");\r\n      console.log(tagsList);\r\n\r\n      props.passFilterDate(filterDate);\r\n      props.passFilterTime(filterTime);\r\n      props.passTagsList(tagsList);\r\n\r\n  }\r\n\r\n    return (\r\n        <div class=\"dropdown\">\r\n            <h1>Filter By</h1>\r\n            <label for=\"itemDate\">Date: </label>\r\n                <input onChange={event => setFilterDate(event.target.value)} type=\"date\" id=\"itemDate\" name=\"itemDate\" className=\"postInput2\"></input>\r\n                <br></br>\r\n            <label for=\"time\" classsName=\"inputLabel\">Time: </label>\r\n                <input onChange={event => setFilterTime(event.target.value)} type=\"time\" id=\"time\" name=\"time\" className=\"postInput2\"></input>\r\n                <br></br>\r\n\r\n            <TagsInput passTagsList={setTagsList} />\r\n\r\n            <br></br>\r\n\r\n            <button type=\"button\" id=\"applyFilter\" onClick={handleFilterButtonClick}>Apply</button>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\Details.js",["97","98","99","100"],"import React, { useState } from 'react';\r\n\r\nconst Details = (props) => {\r\n\r\n    return (\r\n        <div className=\"popup-box\" id=\"detailsPopup\">\r\n            <div className=\"box\" id=\"detailsBox\">\r\n                <span className=\"close-icon\" id=\"detailsClose\" onClick={props.handleClose}>x</span>\r\n                \r\n                <div id=\"col1\">\r\n                    <div id=\"detailPostInfo\">\r\n                        <h1>{props.title}</h1>\r\n                        <span class=\"detailItemInfo\">\r\n                            <img class=\"icon\" src=\"images/clock.png\" />\r\n                            {props.time}\r\n                        </span>\r\n                        <br></br>\r\n                        <span class=\"detailItemInfo\">\r\n                            <img class=\"icon\" src=\"images/date.png\" />\r\n                            {props.date}\r\n                        </span> \r\n                        <br></br>\r\n                        <span class=\"detailItemInfo\" id = \"detailItemLocation\">\r\n                            <img class=\"icon\" src=\"images/location.png\" />\r\n                            {props.location}\r\n                        </span>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <span class=\"detailItemInfo\" id = \"detailItemDescription\">\r\n                            <p>{props.description}</p>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div id=\"contactButtons\">\r\n                        <button type=\"button\" id=\"dropoffLoc\">Share Dropoff Location</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"col2\">\r\n                    <img class=\"detailImg\" src={props.imgSrc} alt='something'/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Details;","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\TagsInput.js",["101"],"import React from \"react\";\r\nconst TagsInput = (props) => {\r\n    const [tags, setTags] = React.useState([]);\r\n\r\n    const addTags = event => {\r\n        if (event.key === \"Enter\" && event.target.value !== \"\") {\r\n            setTags([...tags, event.target.value]);\r\n            props.passTagsList(tags);\r\n            // TODO: Off by one error, last item in tags not passed to Filter.\r\n            event.target.value = \"\";\r\n        }\r\n    };\r\n\r\n    const removeTags = index => {\r\n        setTags([...tags.filter(tag => tags.indexOf(tag) !== index)]);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"tags-input\">\r\n\r\n            <label for=\"loc\">Locations:</label>\r\n            <input\r\n                list=\"locations\"\r\n                name=\"loc\"\r\n                id=\"loc\"\r\n                className=\"postInput2\"\r\n                id=\"locInput\"\r\n                onKeyUp={event => addTags(event)}\r\n                placeholder=\"Press enter to add tags\"\r\n                ></input>\r\n                <datalist id=\"locations\">\r\n                    <option value=\"Clough Undergraduate Learning Commons\"></option>\r\n                    <option value=\"Klaus College of Computing\"></option>\r\n                    <option value=\"Student Center\"></option>\r\n                    <option value=\"Howey Physics Building\"></option>\r\n                    <option value=\"CRC\"></option>\r\n                </datalist> <br></br>\r\n\r\n                <ul>\r\n            {tags.map((tag, index) => (\r\n                <li key={index}>\r\n                    <span>{tag}</span>\r\n                <i className=\"material-icons\" onClick={() => removeTags(index)}>close</i>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default TagsInput;\r\n","C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\skiin\\Documents\\GitHub\\LostThenFound\\lost-then-found\\client\\src\\components\\auth\\Login.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"110","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":7},{"ruleId":"106","severity":1,"message":"111","line":8,"column":3,"nodeType":"108","messageId":"109","endLine":8,"endColumn":12},{"ruleId":"106","severity":1,"message":"112","line":18,"column":9,"nodeType":"108","messageId":"109","endLine":18,"endColumn":16},{"ruleId":"106","severity":1,"message":"113","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"115","line":104,"column":41,"nodeType":"116","messageId":"117","endLine":104,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":116,"column":90,"nodeType":"116","messageId":"117","endLine":116,"endColumn":92},{"ruleId":"114","severity":1,"message":"115","line":122,"column":27,"nodeType":"116","messageId":"117","endLine":122,"endColumn":29},{"ruleId":"114","severity":1,"message":"115","line":154,"column":27,"nodeType":"116","messageId":"117","endLine":154,"endColumn":29},{"ruleId":"106","severity":1,"message":"113","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"115","line":104,"column":41,"nodeType":"116","messageId":"117","endLine":104,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":116,"column":90,"nodeType":"116","messageId":"117","endLine":116,"endColumn":92},{"ruleId":"114","severity":1,"message":"115","line":122,"column":27,"nodeType":"116","messageId":"117","endLine":122,"endColumn":29},{"ruleId":"114","severity":1,"message":"115","line":152,"column":27,"nodeType":"116","messageId":"117","endLine":152,"endColumn":29},{"ruleId":"106","severity":1,"message":"118","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":20},{"ruleId":"106","severity":1,"message":"119","line":2,"column":22,"nodeType":"108","messageId":"109","endLine":2,"endColumn":36},{"ruleId":"106","severity":1,"message":"120","line":2,"column":38,"nodeType":"108","messageId":"109","endLine":2,"endColumn":53},{"ruleId":"106","severity":1,"message":"121","line":2,"column":55,"nodeType":"108","messageId":"109","endLine":2,"endColumn":60},{"ruleId":"122","severity":1,"message":"123","line":49,"column":152,"nodeType":"124","endLine":49,"endColumn":165},{"ruleId":"122","severity":1,"message":"123","line":59,"column":158,"nodeType":"124","endLine":59,"endColumn":171},{"ruleId":"106","severity":1,"message":"110","line":2,"column":9,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":24,"column":15,"nodeType":"127","endLine":24,"endColumn":58},{"ruleId":"125","severity":1,"message":"126","line":29,"column":14,"nodeType":"127","endLine":29,"endColumn":56},{"ruleId":"125","severity":1,"message":"126","line":34,"column":13,"nodeType":"127","endLine":34,"endColumn":59},{"ruleId":"106","severity":1,"message":"113","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"128","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":14,"column":29,"nodeType":"127","endLine":14,"endColumn":72},{"ruleId":"125","severity":1,"message":"126","line":19,"column":29,"nodeType":"127","endLine":19,"endColumn":71},{"ruleId":"125","severity":1,"message":"126","line":24,"column":29,"nodeType":"127","endLine":24,"endColumn":75},{"ruleId":"122","severity":1,"message":"123","line":28,"column":17,"nodeType":"124","endLine":28,"endColumn":30},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useParams' is defined but never used.","'NavLink' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'InputGroup' is defined but never used.","'InputGroupText' is defined but never used.","'InputGroupAddon' is defined but never used.","'Input' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]