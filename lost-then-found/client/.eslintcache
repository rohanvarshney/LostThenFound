[{"/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/index.js":"1","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/reportWebVitals.js":"2","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/App.js":"3","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Matches.js":"4","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Home.js":"5","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Lost.js":"6","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Found.js":"7","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Nav.js":"8","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Post.js":"9","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Popup.js":"10","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Details.js":"11"},{"size":500,"mtime":1614194522949,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1614194522950,"results":"14","hashOfConfig":"13"},{"size":7360,"mtime":1615229495646,"results":"15","hashOfConfig":"13"},{"size":152,"mtime":1614194522948,"results":"16","hashOfConfig":"13"},{"size":1816,"mtime":1615219746816,"results":"17","hashOfConfig":"13"},{"size":2874,"mtime":1615219746816,"results":"18","hashOfConfig":"13"},{"size":2931,"mtime":1615219746815,"results":"19","hashOfConfig":"13"},{"size":691,"mtime":1615219746817,"results":"20","hashOfConfig":"13"},{"size":1448,"mtime":1615229504954,"results":"21","hashOfConfig":"13"},{"size":2966,"mtime":1615219746817,"results":"22","hashOfConfig":"13"},{"size":1789,"mtime":1615229567581,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"15t4mfu",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/index.js",[],["50","51"],"/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/reportWebVitals.js",[],"/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/App.js",["52","53","54"],"/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Matches.js",[],"/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Home.js",[],"/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Lost.js",["55"],"import React, { useState } from 'react';\nimport Post from \"./Post\";\nimport Popup from \"./Popup\";\n\nconst Lost = (props) => {\n\n  const originalPosts = props.itemData[0].items.map((item, idx) => (\n      <Post\n          imgSrc={item.imgSrc}\n          title={item.title}\n          date={item.date}\n          time={item.time}\n          location={item.location}\n          description={item.description}\n      />\n  ));\n\n  var [posts, updatePosts] = useState(props.itemData[0].items.map((item, idx) => (\n    <Post\n          imgSrc={item.imgSrc}\n          title={item.title}\n          date={item.date}\n          time={item.time}\n          location={item.location}\n          description={item.description}\n      />\n  )));\n\n    // state management for New Post popup box\n    const [visible, setVisible] = useState(false); // default set to hidden\n    const [searchText, setSearchText] = useState('');\n\n    // handler for toggling state of new post button\n    const togglePopup = (d) => {\n      setVisible(!visible);\n    };\n\n    function isSearchedFor(item, searchText) {\n      var searched = false;\n      if (item.title.toLowerCase().includes(searchText.toLowerCase())) {\n        searched = true;\n      }\n\n      return searched;\n    }\n\n    function handleSearchButtonClick(e) {\n        e.preventDefault();\n        console.log('The search button was clicked.');\n        console.log(\"Search Bar Text:\" + searchText);\n\n        // Do onChange event for other fields as needed\n        const allItems = originalPosts;\n\n        if (searchText === \"\") {\n          updatePosts(originalPosts);\n        } else {\n          var searchedItems = allItems.filter(function (item) {\n            var validItem = isSearchedFor(item.props, searchText);\n            if (validItem == true) {\n              console.log(\"Match\");\n              console.log(item.props);\n              return true;\n            } else {\n              console.log(\"Not a match\");\n              return false;\n            }\n          });\n          updatePosts(searchedItems);\n        }\n    }\n\n\n    return (\n        <div>\n      <div class=\"container\">\n        <div id=\"searchPost\">\n          <input onChange={event => setSearchText(event.target.value)} type=\"text\" placeholder=\"Search by keyword...\" class=\"searchBar\"></input>\n          <button type=\"button\" id=\"search\" onClick={handleSearchButtonClick}>Search</button>\n          <button type=\"button\" id=\"newPost\" onClick={togglePopup}>New Post</button>\n          </div>\n        <div class=\"flex-container\">\n\n          {posts}\n\n          {visible && <Popup\n            itemState={'New Lost Item'}\n            location={'Last Seen'}\n            timeLabel={'Approximate time lost'}\n            dateLabel={'Date lost'}\n            locationLabel={'Location lost'}\n            handleClose={togglePopup}\n          />}\n        </div>\n      </div>\n    </div>\n\n    );\n}\n\nexport default Lost;\n","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Found.js",["56"],"import React, { useState } from 'react';\nimport Post from \"./Post\";\nimport Popup from \"./Popup\";\n\nconst Found = (props) => {\n  const originalPosts = props.itemData[1].items.map((item, idx) => (\n      <Post\n          imgSrc={item.imgSrc}\n          title={item.title}\n          date={item.date}\n          time={item.time}\n          location={item.location}\n          description={item.description}\n      />\n  ));\n\n  var [posts, updatePosts] = useState(props.itemData[1].items.map((item, idx) => (\n    <Post\n          imgSrc={item.imgSrc}\n          title={item.title}\n          date={item.date}\n          time={item.time}\n          location={item.location}\n          description={item.description}\n      />\n  )));\n\n    // state management for New Post popup box\n    const [visible, setVisible] = useState(false); // default set to hidden\n    const [searchText, setSearchText] = useState('');\n\n    // handler for toggling state of new post button\n    const togglePopup = (d) => {\n      setVisible(!visible);\n    };\n\n    function isSearchedFor(item, searchText) {\n      var searched = false;\n      if (item.title.toLowerCase().includes(searchText.toLowerCase())) {\n        searched = true;\n      }\n\n      return searched;\n    }\n\n    function handleSearchButtonClick(e) {\n        e.preventDefault();\n        console.log('The search button was clicked.');\n        console.log(\"Search Bar Text:\" + searchText);\n\n        // Do onChange event for other fields as needed\n        const allItems = originalPosts;\n\n        if (searchText === \"\") {\n          updatePosts(originalPosts);\n        } else {\n          var searchedItems = allItems.filter(function (item) {\n            var validItem = isSearchedFor(item.props, searchText);\n            if (validItem == true) {\n              console.log(\"Match\");\n              console.log(item.props);\n              return true;\n            } else {\n              console.log(\"Not a match\");\n              return false;\n            }\n          });\n          updatePosts(searchedItems);\n        }\n    }\n\n    return (\n        <div>\n      <div class=\"container\">\n      <div id=\"searchPost\">\n            <input onChange={event => setSearchText(event.target.value)} type=\"text\" placeholder=\"Search by keyword...\" class=\"searchBar\"></input>\n            <span>\n              <button type=\"button\" id=\"search\" onClick={handleSearchButtonClick}>Search</button>\n              <button type=\"button\" id=\"newPost\" onClick={togglePopup}>New Post</button>\n            </span>\n          </div>\n        <div class=\"flex-container\">\n\n\n          {posts}\n\n          {visible && <Popup\n            itemState={'New Found Item'}\n            location={'Location Found'}\n            timeLabel={'Approximate time found'}\n            dateLabel={'Date found'}\n            locationLabel={'Location found'}\n            handleClose={togglePopup}\n          />}\n        </div>\n      </div>\n    </div>\n\n    );\n}\n\nexport default Found;\n","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Nav.js",[],"/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Post.js",["57","58","59","60"],"/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Popup.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76"],"import React, { useState } from \"react\";\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\n\nconst Popup = (props) => {\n\n\n    const [title, setTitle] = useState('');\n    const [dateLost, setDateLost] = useState('0000-01-01');\n    const [locationLost, setLocationLost] = useState('0000-01-01');\n    const [imageSrc, setImgSrc] = useState('');\n    const [description, setDescription] = useState('');\n    const [tagList, setTagList] = useState('');\n\n    //const [isLost, setLost] = useState(\"lost\")\n    function handlePostButtonClick(e) {\n        e.preventDefault();\n        console.log('The link was clicked.');\n        console.log(\"Title:\" + title);\n        // Do onChange event for other fields as needed\n    }\n\n\n    return (\n        <div className=\"popup-box\">\n            <div className=\"box\">\n                <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n                <h1>{props.itemState}</h1>\n                <div class=\"inputHolder\">\n                    <input onChange={event => setTitle(event.target.value)} type=\"text\" placeholder=\"Title\" className=\"postInput\"></input> <br></br>\n\n                    <span className=\"postInputWrap\">\n                        <label for=\"time\" classsName=\"inputLabel\">{props.timeLabel}:</label>\n                        <input type=\"time\" id=\"time\" name=\"time\" className=\"postInput2\"></input>\n                    </span><br></br>\n\n                    <label for=\"itemDate\">{props.dateLabel}:</label>\n                        <input type=\"date\" id=\"itemDate\" name=\"itemDate\" className=\"postInput2\"></input> <br></br>\n\n                        <label for=\"loc\">{props.locationLabel}:</label>\n                            <input list=\"locations\" name=\"loc\" id=\"loc\" className=\"postInput2\" id=\"locInput\"></input>\n                            <datalist id=\"locations\">\n                                <option value=\"Clough Undergraduate Learning Commons\"></option>\n                                <option value=\"Klaus College of Computing\"></option>\n                                <option value=\"Student Center\"></option>\n                                <option value=\"Howey Physics Building\"></option>\n                                <option value=\"CRC\"></option>\n                            </datalist> <br></br>\n\n                        <label for=\"img\">Select image:</label>\n                            <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" className=\"postInput2\" id=\"imgInput\"></input> <br></br>\n\n                            <input type=\"text\" placeholder=\"Item Description\" className=\"postInput\" id=\"descriptionInput\"></input> <br></br>\n\n                        <input type=\"text\" placeholder=\"Tags: e.g. blue, waterbottle\" className=\"postInput\"></input> <br></br>\n\n                    <button type=\"button\" id=\"addPost\" onClick={handlePostButtonClick}>Post</button>\n                 </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Popup;\n","/Users/emilyhodges/Desktop/JRD/LostThenFound/lost-then-found/client/src/components/Details.js",["77","78","79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"89","line":7,"column":3,"nodeType":"87","messageId":"88","endLine":7,"endColumn":7},{"ruleId":"85","severity":1,"message":"90","line":8,"column":3,"nodeType":"87","messageId":"88","endLine":8,"endColumn":12},{"ruleId":"91","severity":1,"message":"92","line":60,"column":27,"nodeType":"93","messageId":"94","endLine":60,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":59,"column":27,"nodeType":"93","messageId":"94","endLine":59,"endColumn":29},{"ruleId":"85","severity":1,"message":"89","line":2,"column":9,"nodeType":"87","messageId":"88","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"96","line":24,"column":15,"nodeType":"97","endLine":24,"endColumn":58},{"ruleId":"95","severity":1,"message":"96","line":29,"column":14,"nodeType":"97","endLine":29,"endColumn":56},{"ruleId":"95","severity":1,"message":"96","line":34,"column":13,"nodeType":"97","endLine":34,"endColumn":59},{"ruleId":"85","severity":1,"message":"98","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":20},{"ruleId":"85","severity":1,"message":"99","line":2,"column":22,"nodeType":"87","messageId":"88","endLine":2,"endColumn":36},{"ruleId":"85","severity":1,"message":"100","line":2,"column":38,"nodeType":"87","messageId":"88","endLine":2,"endColumn":53},{"ruleId":"85","severity":1,"message":"101","line":2,"column":55,"nodeType":"87","messageId":"88","endLine":2,"endColumn":60},{"ruleId":"85","severity":1,"message":"102","line":8,"column":12,"nodeType":"87","messageId":"88","endLine":8,"endColumn":20},{"ruleId":"85","severity":1,"message":"103","line":8,"column":22,"nodeType":"87","messageId":"88","endLine":8,"endColumn":33},{"ruleId":"85","severity":1,"message":"104","line":9,"column":12,"nodeType":"87","messageId":"88","endLine":9,"endColumn":24},{"ruleId":"85","severity":1,"message":"105","line":9,"column":26,"nodeType":"87","messageId":"88","endLine":9,"endColumn":41},{"ruleId":"85","severity":1,"message":"106","line":10,"column":12,"nodeType":"87","messageId":"88","endLine":10,"endColumn":20},{"ruleId":"85","severity":1,"message":"107","line":10,"column":22,"nodeType":"87","messageId":"88","endLine":10,"endColumn":31},{"ruleId":"85","severity":1,"message":"108","line":11,"column":12,"nodeType":"87","messageId":"88","endLine":11,"endColumn":23},{"ruleId":"85","severity":1,"message":"109","line":11,"column":25,"nodeType":"87","messageId":"88","endLine":11,"endColumn":39},{"ruleId":"85","severity":1,"message":"110","line":12,"column":12,"nodeType":"87","messageId":"88","endLine":12,"endColumn":19},{"ruleId":"85","severity":1,"message":"111","line":12,"column":21,"nodeType":"87","messageId":"88","endLine":12,"endColumn":31},{"ruleId":"112","severity":1,"message":"113","line":40,"column":96,"nodeType":"114","endLine":40,"endColumn":109},{"ruleId":"112","severity":1,"message":"113","line":50,"column":108,"nodeType":"114","endLine":50,"endColumn":121},{"ruleId":"85","severity":1,"message":"115","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":14,"column":29,"nodeType":"97","endLine":14,"endColumn":72},{"ruleId":"95","severity":1,"message":"96","line":19,"column":29,"nodeType":"97","endLine":19,"endColumn":71},{"ruleId":"95","severity":1,"message":"96","line":24,"column":29,"nodeType":"97","endLine":24,"endColumn":75},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useParams' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InputGroup' is defined but never used.","'InputGroupText' is defined but never used.","'InputGroupAddon' is defined but never used.","'Input' is defined but never used.","'dateLost' is assigned a value but never used.","'setDateLost' is assigned a value but never used.","'locationLost' is assigned a value but never used.","'setLocationLost' is assigned a value but never used.","'imageSrc' is assigned a value but never used.","'setImgSrc' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'tagList' is assigned a value but never used.","'setTagList' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]