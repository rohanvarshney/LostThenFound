{"ast":null,"code":"'use strict';\n\nconst Query = require('../connection/commands').Query;\n\nconst MongoError = require('../error').MongoError;\n\nconst getReadPreference = require('./shared').getReadPreference;\n\nconst collectionNamespace = require('./shared').collectionNamespace;\n\nconst isSharded = require('./shared').isSharded;\n\nconst maxWireVersion = require('../utils').maxWireVersion;\n\nconst applyCommonQueryOptions = require('./shared').applyCommonQueryOptions;\n\nconst command = require('./command');\n\nfunction query(server, ns, cmd, cursorState, options, callback) {\n  options = options || {};\n\n  if (cursorState.cursorId != null) {\n    return callback();\n  }\n\n  if (cmd == null) {\n    return callback(new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`));\n  }\n\n  if (maxWireVersion(server) < 4) {\n    const query = prepareLegacyFindQuery(server, ns, cmd, cursorState, options);\n    const queryOptions = applyCommonQueryOptions({}, cursorState);\n\n    if (typeof query.documentsReturnedIn === 'string') {\n      queryOptions.documentsReturnedIn = query.documentsReturnedIn;\n    }\n\n    server.s.pool.write(query, queryOptions, callback);\n    return;\n  }\n\n  const readPreference = getReadPreference(cmd, options);\n  const findCmd = prepareFindCommand(server, ns, cmd, cursorState, options); // NOTE: This actually modifies the passed in cmd, and our code _depends_ on this\n  //       side-effect. Change this ASAP\n\n  cmd.virtual = false;\n  const commandOptions = Object.assign({\n    documentsReturnedIn: 'firstBatch',\n    numberToReturn: 1,\n    slaveOk: readPreference.slaveOk()\n  }, options);\n\n  if (cmd.readPreference) {\n    commandOptions.readPreference = readPreference;\n  }\n\n  if (cursorState.session) {\n    commandOptions.session = cursorState.session;\n  }\n\n  command(server, ns, findCmd, commandOptions, callback);\n}\n\nfunction prepareFindCommand(server, ns, cmd, cursorState) {\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  let findCmd = {\n    find: collectionNamespace(ns)\n  };\n\n  if (cmd.query) {\n    if (cmd.query['$query']) {\n      findCmd.filter = cmd.query['$query'];\n    } else {\n      findCmd.filter = cmd.query;\n    }\n  }\n\n  let sortValue = cmd.sort;\n\n  if (Array.isArray(sortValue)) {\n    const sortObject = {};\n\n    if (sortValue.length > 0 && !Array.isArray(sortValue[0])) {\n      let sortDirection = sortValue[1];\n\n      if (sortDirection === 'asc') {\n        sortDirection = 1;\n      } else if (sortDirection === 'desc') {\n        sortDirection = -1;\n      }\n\n      sortObject[sortValue[0]] = sortDirection;\n    } else {\n      for (let i = 0; i < sortValue.length; i++) {\n        let sortDirection = sortValue[i][1];\n\n        if (sortDirection === 'asc') {\n          sortDirection = 1;\n        } else if (sortDirection === 'desc') {\n          sortDirection = -1;\n        }\n\n        sortObject[sortValue[i][0]] = sortDirection;\n      }\n    }\n\n    sortValue = sortObject;\n  }\n\n  if (typeof cmd.allowDiskUse === 'boolean') {\n    findCmd.allowDiskUse = cmd.allowDiskUse;\n  }\n\n  if (cmd.sort) findCmd.sort = sortValue;\n  if (cmd.fields) findCmd.projection = cmd.fields;\n  if (cmd.hint) findCmd.hint = cmd.hint;\n  if (cmd.skip) findCmd.skip = cmd.skip;\n  if (cmd.limit) findCmd.limit = cmd.limit;\n\n  if (cmd.limit < 0) {\n    findCmd.limit = Math.abs(cmd.limit);\n    findCmd.singleBatch = true;\n  }\n\n  if (typeof cmd.batchSize === 'number') {\n    if (cmd.batchSize < 0) {\n      if (cmd.limit !== 0 && Math.abs(cmd.batchSize) < Math.abs(cmd.limit)) {\n        findCmd.limit = Math.abs(cmd.batchSize);\n      }\n\n      findCmd.singleBatch = true;\n    }\n\n    findCmd.batchSize = Math.abs(cmd.batchSize);\n  }\n\n  if (cmd.comment) findCmd.comment = cmd.comment;\n  if (cmd.maxScan) findCmd.maxScan = cmd.maxScan;\n  if (cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;\n  if (cmd.min) findCmd.min = cmd.min;\n  if (cmd.max) findCmd.max = cmd.max;\n  findCmd.returnKey = cmd.returnKey ? cmd.returnKey : false;\n  findCmd.showRecordId = cmd.showDiskLoc ? cmd.showDiskLoc : false;\n  if (cmd.snapshot) findCmd.snapshot = cmd.snapshot;\n  if (cmd.tailable) findCmd.tailable = cmd.tailable;\n  if (cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;\n  if (cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;\n  if (cmd.awaitData) findCmd.awaitData = cmd.awaitData;\n  if (cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;\n  if (cmd.partial) findCmd.partial = cmd.partial;\n  if (cmd.collation) findCmd.collation = cmd.collation;\n  if (cmd.readConcern) findCmd.readConcern = cmd.readConcern; // If we have explain, we need to rewrite the find command\n  // to wrap it in the explain command\n\n  if (cmd.explain) {\n    findCmd = {\n      explain: findCmd\n    };\n  }\n\n  return findCmd;\n}\n\nfunction prepareLegacyFindQuery(server, ns, cmd, cursorState, options) {\n  options = options || {};\n  const bson = server.s.bson;\n  const readPreference = getReadPreference(cmd, options);\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  let numberToReturn = 0;\n\n  if (cursorState.limit < 0 || cursorState.limit !== 0 && cursorState.limit < cursorState.batchSize || cursorState.limit > 0 && cursorState.batchSize === 0) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  const numberToSkip = cursorState.skip || 0;\n  const findCmd = {};\n\n  if (isSharded(server) && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n  }\n\n  if (cmd.sort) findCmd['$orderby'] = cmd.sort;\n  if (cmd.hint) findCmd['$hint'] = cmd.hint;\n  if (cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot;\n  if (typeof cmd.returnKey !== 'undefined') findCmd['$returnKey'] = cmd.returnKey;\n  if (cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan;\n  if (cmd.min) findCmd['$min'] = cmd.min;\n  if (cmd.max) findCmd['$max'] = cmd.max;\n  if (typeof cmd.showDiskLoc !== 'undefined') findCmd['$showDiskLoc'] = cmd.showDiskLoc;\n  if (cmd.comment) findCmd['$comment'] = cmd.comment;\n  if (cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS;\n\n  if (cmd.explain) {\n    // nToReturn must be 0 (match all) or negative (match N and close cursor)\n    // nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    findCmd['$explain'] = true;\n  }\n\n  findCmd['$query'] = cmd.query;\n\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(`server find command does not support a readConcern level of ${cmd.readConcern.level}`);\n  }\n\n  if (cmd.readConcern) {\n    cmd = Object.assign({}, cmd);\n    delete cmd['readConcern'];\n  }\n\n  const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n  const query = new Query(bson, ns, findCmd, {\n    numberToSkip: numberToSkip,\n    numberToReturn: numberToReturn,\n    pre32Limit: typeof cmd.limit !== 'undefined' ? cmd.limit : undefined,\n    checkKeys: false,\n    returnFieldSelector: cmd.fields,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n  if (typeof cmd.tailable === 'boolean') query.tailable = cmd.tailable;\n  if (typeof cmd.oplogReplay === 'boolean') query.oplogReplay = cmd.oplogReplay;\n  if (typeof cmd.noCursorTimeout === 'boolean') query.noCursorTimeout = cmd.noCursorTimeout;\n  if (typeof cmd.awaitData === 'boolean') query.awaitData = cmd.awaitData;\n  if (typeof cmd.partial === 'boolean') query.partial = cmd.partial;\n  query.slaveOk = readPreference.slaveOk();\n  return query;\n}\n\nmodule.exports = query;","map":{"version":3,"sources":["/Users/rohanvarshney/Google Drive/GitHub/LostThenFound/lost-then-found/node_modules/mongodb/lib/core/wireprotocol/query.js"],"names":["Query","require","MongoError","getReadPreference","collectionNamespace","isSharded","maxWireVersion","applyCommonQueryOptions","command","query","server","ns","cmd","cursorState","options","callback","cursorId","JSON","stringify","prepareLegacyFindQuery","queryOptions","documentsReturnedIn","s","pool","write","readPreference","findCmd","prepareFindCommand","virtual","commandOptions","Object","assign","numberToReturn","slaveOk","session","batchSize","find","filter","sortValue","sort","Array","isArray","sortObject","length","sortDirection","i","allowDiskUse","fields","projection","hint","skip","limit","Math","abs","singleBatch","comment","maxScan","maxTimeMS","min","max","returnKey","showRecordId","showDiskLoc","snapshot","tailable","oplogReplay","noCursorTimeout","awaitData","awaitdata","partial","collation","readConcern","explain","bson","numberToSkip","toJSON","level","serializeFunctions","ignoreUndefined","pre32Limit","undefined","checkKeys","returnFieldSelector","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst MongoError = require('../error').MongoError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst isSharded = require('./shared').isSharded;\nconst maxWireVersion = require('../utils').maxWireVersion;\nconst applyCommonQueryOptions = require('./shared').applyCommonQueryOptions;\nconst command = require('./command');\n\nfunction query(server, ns, cmd, cursorState, options, callback) {\n  options = options || {};\n  if (cursorState.cursorId != null) {\n    return callback();\n  }\n\n  if (cmd == null) {\n    return callback(new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`));\n  }\n\n  if (maxWireVersion(server) < 4) {\n    const query = prepareLegacyFindQuery(server, ns, cmd, cursorState, options);\n    const queryOptions = applyCommonQueryOptions({}, cursorState);\n    if (typeof query.documentsReturnedIn === 'string') {\n      queryOptions.documentsReturnedIn = query.documentsReturnedIn;\n    }\n\n    server.s.pool.write(query, queryOptions, callback);\n    return;\n  }\n\n  const readPreference = getReadPreference(cmd, options);\n  const findCmd = prepareFindCommand(server, ns, cmd, cursorState, options);\n\n  // NOTE: This actually modifies the passed in cmd, and our code _depends_ on this\n  //       side-effect. Change this ASAP\n  cmd.virtual = false;\n\n  const commandOptions = Object.assign(\n    {\n      documentsReturnedIn: 'firstBatch',\n      numberToReturn: 1,\n      slaveOk: readPreference.slaveOk()\n    },\n    options\n  );\n\n  if (cmd.readPreference) {\n    commandOptions.readPreference = readPreference;\n  }\n\n  if (cursorState.session) {\n    commandOptions.session = cursorState.session;\n  }\n\n  command(server, ns, findCmd, commandOptions, callback);\n}\n\nfunction prepareFindCommand(server, ns, cmd, cursorState) {\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  let findCmd = {\n    find: collectionNamespace(ns)\n  };\n\n  if (cmd.query) {\n    if (cmd.query['$query']) {\n      findCmd.filter = cmd.query['$query'];\n    } else {\n      findCmd.filter = cmd.query;\n    }\n  }\n\n  let sortValue = cmd.sort;\n  if (Array.isArray(sortValue)) {\n    const sortObject = {};\n\n    if (sortValue.length > 0 && !Array.isArray(sortValue[0])) {\n      let sortDirection = sortValue[1];\n      if (sortDirection === 'asc') {\n        sortDirection = 1;\n      } else if (sortDirection === 'desc') {\n        sortDirection = -1;\n      }\n\n      sortObject[sortValue[0]] = sortDirection;\n    } else {\n      for (let i = 0; i < sortValue.length; i++) {\n        let sortDirection = sortValue[i][1];\n        if (sortDirection === 'asc') {\n          sortDirection = 1;\n        } else if (sortDirection === 'desc') {\n          sortDirection = -1;\n        }\n\n        sortObject[sortValue[i][0]] = sortDirection;\n      }\n    }\n\n    sortValue = sortObject;\n  }\n\n  if (typeof cmd.allowDiskUse === 'boolean') {\n    findCmd.allowDiskUse = cmd.allowDiskUse;\n  }\n\n  if (cmd.sort) findCmd.sort = sortValue;\n  if (cmd.fields) findCmd.projection = cmd.fields;\n  if (cmd.hint) findCmd.hint = cmd.hint;\n  if (cmd.skip) findCmd.skip = cmd.skip;\n  if (cmd.limit) findCmd.limit = cmd.limit;\n  if (cmd.limit < 0) {\n    findCmd.limit = Math.abs(cmd.limit);\n    findCmd.singleBatch = true;\n  }\n\n  if (typeof cmd.batchSize === 'number') {\n    if (cmd.batchSize < 0) {\n      if (cmd.limit !== 0 && Math.abs(cmd.batchSize) < Math.abs(cmd.limit)) {\n        findCmd.limit = Math.abs(cmd.batchSize);\n      }\n\n      findCmd.singleBatch = true;\n    }\n\n    findCmd.batchSize = Math.abs(cmd.batchSize);\n  }\n\n  if (cmd.comment) findCmd.comment = cmd.comment;\n  if (cmd.maxScan) findCmd.maxScan = cmd.maxScan;\n  if (cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;\n  if (cmd.min) findCmd.min = cmd.min;\n  if (cmd.max) findCmd.max = cmd.max;\n  findCmd.returnKey = cmd.returnKey ? cmd.returnKey : false;\n  findCmd.showRecordId = cmd.showDiskLoc ? cmd.showDiskLoc : false;\n  if (cmd.snapshot) findCmd.snapshot = cmd.snapshot;\n  if (cmd.tailable) findCmd.tailable = cmd.tailable;\n  if (cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;\n  if (cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;\n  if (cmd.awaitData) findCmd.awaitData = cmd.awaitData;\n  if (cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;\n  if (cmd.partial) findCmd.partial = cmd.partial;\n  if (cmd.collation) findCmd.collation = cmd.collation;\n  if (cmd.readConcern) findCmd.readConcern = cmd.readConcern;\n\n  // If we have explain, we need to rewrite the find command\n  // to wrap it in the explain command\n  if (cmd.explain) {\n    findCmd = {\n      explain: findCmd\n    };\n  }\n\n  return findCmd;\n}\n\nfunction prepareLegacyFindQuery(server, ns, cmd, cursorState, options) {\n  options = options || {};\n  const bson = server.s.bson;\n  const readPreference = getReadPreference(cmd, options);\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n\n  let numberToReturn = 0;\n  if (\n    cursorState.limit < 0 ||\n    (cursorState.limit !== 0 && cursorState.limit < cursorState.batchSize) ||\n    (cursorState.limit > 0 && cursorState.batchSize === 0)\n  ) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  const numberToSkip = cursorState.skip || 0;\n\n  const findCmd = {};\n  if (isSharded(server) && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n  }\n\n  if (cmd.sort) findCmd['$orderby'] = cmd.sort;\n  if (cmd.hint) findCmd['$hint'] = cmd.hint;\n  if (cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot;\n  if (typeof cmd.returnKey !== 'undefined') findCmd['$returnKey'] = cmd.returnKey;\n  if (cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan;\n  if (cmd.min) findCmd['$min'] = cmd.min;\n  if (cmd.max) findCmd['$max'] = cmd.max;\n  if (typeof cmd.showDiskLoc !== 'undefined') findCmd['$showDiskLoc'] = cmd.showDiskLoc;\n  if (cmd.comment) findCmd['$comment'] = cmd.comment;\n  if (cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS;\n  if (cmd.explain) {\n    // nToReturn must be 0 (match all) or negative (match N and close cursor)\n    // nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    findCmd['$explain'] = true;\n  }\n\n  findCmd['$query'] = cmd.query;\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      `server find command does not support a readConcern level of ${cmd.readConcern.level}`\n    );\n  }\n\n  if (cmd.readConcern) {\n    cmd = Object.assign({}, cmd);\n    delete cmd['readConcern'];\n  }\n\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  const query = new Query(bson, ns, findCmd, {\n    numberToSkip: numberToSkip,\n    numberToReturn: numberToReturn,\n    pre32Limit: typeof cmd.limit !== 'undefined' ? cmd.limit : undefined,\n    checkKeys: false,\n    returnFieldSelector: cmd.fields,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  if (typeof cmd.tailable === 'boolean') query.tailable = cmd.tailable;\n  if (typeof cmd.oplogReplay === 'boolean') query.oplogReplay = cmd.oplogReplay;\n  if (typeof cmd.noCursorTimeout === 'boolean') query.noCursorTimeout = cmd.noCursorTimeout;\n  if (typeof cmd.awaitData === 'boolean') query.awaitData = cmd.awaitData;\n  if (typeof cmd.partial === 'boolean') query.partial = cmd.partial;\n\n  query.slaveOk = readPreference.slaveOk();\n  return query;\n}\n\nmodule.exports = query;\n"]},"metadata":{},"sourceType":"script"}