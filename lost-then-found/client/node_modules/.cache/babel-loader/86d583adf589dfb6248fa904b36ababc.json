{"ast":null,"code":"'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst deleteCallback = require('./common_functions').deleteCallback;\n\nconst removeDocuments = require('./common_functions').removeDocuments;\n\nclass DeleteOneOperation extends OperationBase {\n  constructor(collection, filter, options) {\n    super(options);\n    this.collection = collection;\n    this.filter = filter;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const filter = this.filter;\n    const options = this.options;\n    options.single = true;\n    removeDocuments(coll, filter, options, (err, r) => deleteCallback(err, r, callback));\n  }\n\n}\n\nmodule.exports = DeleteOneOperation;","map":{"version":3,"sources":["/Users/rohanvarshney/Google Drive/GitHub/LostThenFound/lost-then-found/node_modules/mongodb/lib/operations/delete_one.js"],"names":["OperationBase","require","deleteCallback","removeDocuments","DeleteOneOperation","constructor","collection","filter","options","execute","callback","coll","single","err","r","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,aAA7C;;AACA,MAAME,cAAc,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BC,cAArD;;AACA,MAAMC,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAAP,CAA8BE,eAAtD;;AAEA,MAAMC,kBAAN,SAAiCJ,aAAjC,CAA+C;AAC7CK,EAAAA,WAAW,CAACC,UAAD,EAAaC,MAAb,EAAqBC,OAArB,EAA8B;AACvC,UAAMA,OAAN;AAEA,SAAKF,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;;AAEDE,EAAAA,OAAO,CAACC,QAAD,EAAW;AAChB,UAAMC,IAAI,GAAG,KAAKL,UAAlB;AACA,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,OAAO,GAAG,KAAKA,OAArB;AAEAA,IAAAA,OAAO,CAACI,MAAR,GAAiB,IAAjB;AACAT,IAAAA,eAAe,CAACQ,IAAD,EAAOJ,MAAP,EAAeC,OAAf,EAAwB,CAACK,GAAD,EAAMC,CAAN,KAAYZ,cAAc,CAACW,GAAD,EAAMC,CAAN,EAASJ,QAAT,CAAlD,CAAf;AACD;;AAf4C;;AAkB/CK,MAAM,CAACC,OAAP,GAAiBZ,kBAAjB","sourcesContent":["'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst deleteCallback = require('./common_functions').deleteCallback;\nconst removeDocuments = require('./common_functions').removeDocuments;\n\nclass DeleteOneOperation extends OperationBase {\n  constructor(collection, filter, options) {\n    super(options);\n\n    this.collection = collection;\n    this.filter = filter;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const filter = this.filter;\n    const options = this.options;\n\n    options.single = true;\n    removeDocuments(coll, filter, options, (err, r) => deleteCallback(err, r, callback));\n  }\n}\n\nmodule.exports = DeleteOneOperation;\n"]},"metadata":{},"sourceType":"script"}