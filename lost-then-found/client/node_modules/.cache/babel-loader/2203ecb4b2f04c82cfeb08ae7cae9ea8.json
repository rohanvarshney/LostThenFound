{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aj/Development/LostThenFound/lost-then-found/client/src/components/Found.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Post from \"./Post\";\nimport Popup from \"./Popup\";\n\nconst Found = props => {\n  _s();\n\n  const posts = props.itemData[1].items.map((item, idx) => /*#__PURE__*/_jsxDEV(Post, {\n    imgSrc: item.imgSrc,\n    title: item.title,\n    time: item.time,\n    date: item.date,\n    location: item.location,\n    description: item.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this)); // state management for New Post popup box\n\n  const [visible, setVisible] = useState(false); // default set to hidden\n  // handler for toggling state of new post button\n\n  const togglePopup = d => {\n    setVisible(!visible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"searchPost\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by keyword...\",\n          class: \"searchBar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"newPost\",\n          onClick: togglePopup,\n          children: \"New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex-container\",\n        children: [posts, visible && /*#__PURE__*/_jsxDEV(Popup, {\n          itemState: 'Found',\n          handleClose: togglePopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Found, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = Found;\nexport default Found;\n\nvar _c;\n\n$RefreshReg$(_c, \"Found\");","map":{"version":3,"sources":["/Users/aj/Development/LostThenFound/lost-then-found/client/src/components/Found.js"],"names":["React","useState","Post","Popup","Found","props","posts","itemData","items","map","item","idx","imgSrc","title","time","date","location","description","visible","setVisible","togglePopup","d"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAMC,KAAK,GAAGD,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkBC,KAAlB,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,GAAP,kBACtC,QAAC,IAAD;AACI,IAAA,MAAM,EAAED,IAAI,CAACE,MADjB;AAEI,IAAA,KAAK,EAAEF,IAAI,CAACG,KAFhB;AAGI,IAAA,IAAI,EAAEH,IAAI,CAACI,IAHf;AAII,IAAA,IAAI,EAAEJ,IAAI,CAACK,IAJf;AAKI,IAAA,QAAQ,EAAEL,IAAI,CAACM,QALnB;AAMI,IAAA,WAAW,EAAEN,IAAI,CAACO;AANtB;AAAA;AAAA;AAAA;AAAA,UADU,CAAd,CADqB,CAYrB;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC,CAbqB,CAa0B;AAE/C;;AACA,QAAMmB,WAAW,GAAIC,CAAD,IAAO;AACzBF,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,sBACI;AAAA,2BACF;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACA;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA,gCACM;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,sBAA/B;AAAsD,UAAA,KAAK,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,gBADN,eAEM;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,EAAE,EAAC,SAAzB;AAAmC,UAAA,OAAO,EAAEE,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKE;AAAK,QAAA,KAAK,EAAC,gBAAX;AAAA,mBAGGd,KAHH,EAKGY,OAAO,iBAAI,QAAC,KAAD;AACV,UAAA,SAAS,EAAE,OADD;AAEV,UAAA,WAAW,EAAEE;AAFH;AAAA;AAAA;AAAA;AAAA,gBALd;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAzCD;;GAAMhB,K;;KAAAA,K;AA2CN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport Post from \"./Post\";\nimport Popup from \"./Popup\";\n\nconst Found = (props) => {\n    const posts = props.itemData[1].items.map((item, idx) => (\n        <Post\n            imgSrc={item.imgSrc}\n            title={item.title}\n            time={item.time}\n            date={item.date}\n            location={item.location}\n            description={item.description}\n        />\n    ));\n\n    // state management for New Post popup box\n    const [visible, setVisible] = useState(false); // default set to hidden\n\n    // handler for toggling state of new post button\n    const togglePopup = (d) => {\n      setVisible(!visible);\n    };\n    \n    return (\n        <div>\n      <div class=\"container\">\n      <div id=\"searchPost\">\n            <input type=\"text\" placeholder=\"Search by keyword...\" class=\"searchBar\"></input>\n            <button type=\"button\" id=\"newPost\" onClick={togglePopup}>New Post</button>\n          </div>\n        <div class=\"flex-container\">\n          \n\n          {posts}\n\n          {visible && <Popup \n            itemState={'Found'}\n            handleClose={togglePopup}\n          />}\n        </div>\n      </div>\n    </div>\n\n    );\n}\n\nexport default Found;"]},"metadata":{},"sourceType":"module"}